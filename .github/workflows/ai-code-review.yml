name: Gemini Code Review

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize]

jobs:
  pr-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v3

      - name: Install GoogleGenerativeAI
        run: |
          npm install @google/generative-ai

      - name: Get commit message
        run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV

      - name: Get git diff for PR
        run: git diff --unified=0 origin/${{ github.event.pull_request.base.ref }} > "diff.txt"

      - name: Run Gemini-1.5-flash Review
        id: gemini_review
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const diff_output = fs.readFileSync("diff.txt", "utf8");
            const commit_message = process.env.COMMIT_MESSAGE;

            const { GoogleGenerativeAI } = require("@google/generative-ai");
            const genAI = new GoogleGenerativeAI("${{ secrets.GEMINI_API_KEY }}");
            const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

            const prompt = `Explain in Korean. You are reviewing a pull request. The commit message is "${commit_message}". Provide comments in JSON format considering the context of the commit message: [{"path":"{ filepath }", "line": { line }, "text": { review comment }, "side": "RIGHT"}].\n<git diff>${diff_output}</git diff>`;

            const result = await model.generateContent(prompt);
            fs.writeFileSync('review_result.txt', result.response.text());

      - name: Add PR review comments
        uses: nbaztec/add-pr-review-comment@v1.0.7
        with:
          comments: ${{ steps.gemini_review.outputs.comment }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Display review results in workflow log
        run: cat review_result.txt
